name: build Windows Installer

on:
  push:
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        qt_version: [5.15.0]
        platform: [windows-latest]
        arch: [x64]
        include:
          - platform: windows-latest
            arch: x64
            qtarch: win64_msvc2019_64
      fail-fast: false

    runs-on: ${{ matrix.platform }}
    env:
      _QV2RAY_BUILD_INFO_: "Qv2ray built from Github Action"
      _QV2RAY_BUILD_EXTRA_INFO_: "qt${{ matrix.qt_version }}-${{ github.sha }}-ci.${{ matrix.platform }}"
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checking out sources
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"
          architecture: ${{ matrix.arch }}
      - name: Setup MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
          arch: ${{ matrix.arch }}
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2.1.7
        with:
          path: ../Qt
          key: QtCache-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.qt_version }}
      - name: Setup Qt - ${{ matrix.arch }}
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          arch: ${{ matrix.qtarch }}
          mirror: "http://mirrors.ocf.berkeley.edu/qt/"
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Windows - ${{ matrix.arch }} - Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Windows - ${{ matrix.arch }} - Build preparation - Download Dependencies
        shell: bash
        run: |
          cd libs
          ./setup-libs.sh windows ${{ matrix.arch }}
      - name: Windows - ${{ matrix.arch }} - Generate Dependencies and Build
        shell: bash
        env:
          CC: cl.exe
          CXX: cl.exe
        run: |
          mkdir build
          cd build
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_NSIS=ON
          cmake --build . --target package --parallel $(nproc)
      - name: Windows - Get package name
        shell: bash
        id: get_package
        run: |
          echo ::set-output name=NAME::$(basename build/qv2ray-*.exe)
      - name: Windows - ${{ matrix.arch }} - uploading artifact
        uses: actions/upload-artifact@master
        with:
          name: Qv2ray-${{ github.sha }}.Windows-${{ matrix.arch }}.qt${{ matrix.qt_version }}.exe
          path: build/${{ steps.get_package.outputs.NAME }}
      - name: Windows - ${{ matrix.arch }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{ steps.get_package.outputs.NAME }}
          asset_name: ${{ steps.get_package.outputs.NAME }}
          tag: ${{ github.ref }}
          overwrite: true
